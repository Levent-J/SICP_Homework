#lang racket
(define (accumulate op initial seq)
  (if (null? seq)
      initial
      (op (car seq) (accumulate op initial (cdr seq))))
  )
(define (horner x coefficient-seq)
  (accumulate (lambda (this-coeff high-terms) (+ this-coeff (* x high-terms)))
              0
              coefficient-seq)
  )
(horner 2 (list 1 3 0 5 0 1))