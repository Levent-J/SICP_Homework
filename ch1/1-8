#lang racket
(define (cube-iter guess x)
  (if (good-enough? guess x) guess (cube-iter (improve guess x) x))
  )

(define (improve y x)
  (/ (+ (/ x (* y y)) (* 2 y)) 3)
  )

(define (good-enough? guess x)
  (< (abs (- (cube guess) x)) 0.00001)
  )

(define (cube x)
  (* x x x)
  )

(define (abs x)
  (if (< x 0) (- x) x)
  )

(define (cubrt x)
  (cube-iter 1.0 x)
  )

(cubrt 8)